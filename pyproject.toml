[tool.poetry]
name = "audible-cli"
version = "0.2.4"
description = "Command line interface (cli) for the audible package."
authors = ["mkb79 <mkb79@hackitall.de>"]
license = "AGPL-3.0-only"
readme = "README.md"
homepage = "https://github.com/mkb79/audible-cli"
repository = "https://github.com/mkb79/audible-cli"
documentation = "https://audible-cli.readthedocs.io"
packages = [
    { include = "audible_cli", from = "src" },
]
keywords = [
    "Audible",
    "API",
    "async",
    "cli"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11"
    ]

[tool.poetry.urls]
Changelog = "https://github.com/mkb79/audible-cli/releases"

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
click = ">=8.0.1"
audible = ">=0.8.2"
aiofiles = ">=23.1.0"
httpx = ">=0.23.3"
packaging = ">=23.0"
Pillow = ">=9.4.0"
tabulate = ">=0.9.0"
toml = ">=0.10.2"
tqdm = ">=4.64.1"
questionary = ">=1.10.0"
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[tool.poetry.group.dev.dependencies]
Pygments = ">=2.10.0"
black = ">=21.10b0"
coverage = {extras = ["toml"], version = ">=6.2"}
darglint = ">=1.8.1"
furo = ">=2021.11.12"
mypy = ">=0.930"
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.1.0"
pytest = ">=6.2.5"
ruff = ">=0.0.254"
safety = ">=1.10.3"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=3.0.2"
typeguard = ">=2.13.3"
xdoctest = {extras = ["colors"], version = ">=0.15.10"}
myst-parser = {version = ">=0.16.1"}
pyinstaller = ">=5.8.0"

[tool.poetry.scripts]
audible = "audible_cli:main"
audible-quickstart = "audible_cli:quickstart"

[tool.poetry_bumpversion.file."src/audible_cli/__init__.py"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["audible_cli", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]

[tool.mypy]
disable_error_code = [
    "arg-type",
    "assignment",
    "attr-defined",
    "call-overload",
    "dict-item",
    "func-returns-value",
    "has-type",
    "import",
    "index",
    "no-any-return",
    "no-untyped-call",
    "no-untyped-def",
    "operator",
    "return-value",
    "type-arg",
    "union-attr",
    "valid-type",
    "var-annotated",
]
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict = true
warn_unreachable = true

[tool.ruff]
#  missing rst-docstrings check, these should be adding through ruff
ignore = [
    "D10",  # temporarily ignore missing docstrings
    "E501",
    "G004",  # temporarily ignore Logging statement uses f-string
    "N818",
]
line-length = 80
select=[
    "A",
    "B",
    "C4",
    "C9",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "PGH",
    "PLC",
    "PLE",
    "S",
    "UP",
    "W",
]
src = ["src"]
target-version = "py38"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.isort]
force-single-line = false
known-first-party = ["audible_cli"]
lines-after-imports = 2

[tool.ruff.mccabe]
max-complexity = 32  # temporarily raise complexity, target is 10

[tool.ruff.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
